<div class="header">
  <div class="header-content">
    <h1>FantasyKings</h1>
    <div class="header-info">
      <div class="week-info">Week <%= current_nfl_week %></div>
      <div class="budget-info-header"><%= format_currency(current_user.weekly_budget_remaining(current_nfl_week)) %></div>
    </div>
  </div>
</div>

<% if flash[:notice] %>
  <div class="flash-notice"><%= flash[:notice] %></div>
<% end %>

<% if flash[:alert] %>
  <div class="flash-alert"><%= flash[:alert] %></div>
<% end %>

<% if should_show_refresh_banner? %>
  <div class="refresh-banner">
    <div class="refresh-banner-content">
      <div class="refresh-banner-text">
        <p>Odds last updated <strong><%= time_ago_in_words_short(games_last_updated_at) %></strong>.</p>
      </div>
      <button id="homeRefreshGamesBtn" class="refresh-banner-button">
        <span class="refresh-text">Refresh Odds</span>
        <span class="refresh-spinner hidden">‚ü≥</span>
      </button>
    </div>
  </div>
<% end %>

<div data-controller="betting">
  <% if @bets.present? %>
    <div class="bet-cards">
      <% @bets.each do |bet| %>
        <%= render partial: 'bet_card', locals: { bet: bet } %>
      <% end %>
    </div>
  <% else %>
    <div class="no-bets-message">
      <h2>Contact the site owner to play!</h2>
    </div>
  <% end %>

  <!-- Confirmation Modal -->
  <div class="modal hidden" data-betting-target="modal" data-action="click->betting#closeOnBackdrop">
    <div class="modal-content">
      <%= form_with url: bets_path, method: :post, local: true do |form| %>
        <div class="modal-header">
          <h2>Place Your Bet</h2>
          <div class="bet-description" data-betting-target="betDescription"></div>
        </div>

        <div class="budget-info" data-betting-target="budgetInfo">
          <div class="budget-row">
            <span>Week <span data-betting-target="currentWeek"><%= current_nfl_week %></span> Budget:</span>
            <span data-betting-target="weeklyBudget">$10.00</span>
          </div>
          <div class="budget-row">
            <span>Used:</span>
            <span data-betting-target="budgetUsed">$0.00</span>
          </div>
          <div class="budget-row remaining">
            <span>Remaining:</span>
            <span data-betting-target="budgetRemaining">$10.00</span>
          </div>
        </div>

        <div class="modal-body">
          <div class="form-group">
            <%= form.label :stake, "Stake Amount ($1 - $9)" %>
            <%= form.number_field :stake, 
              step: 0.01, 
              min: 1,
              max: 9, 
              placeholder: "0.00",
              data: { 
                betting_target: "stakeInput",
                action: "keydown->betting#handleKeydown input->betting#validateStake"
              } %>
            <div class="stake-error hidden" data-betting-target="stakeError"></div>
          </div>
          
          <div class="potential-winnings hidden" data-betting-target="potentialWinnings">
            <div class="winnings-label">Potential Winnings:</div>
            <div class="winnings-amount" data-betting-target="winningsAmount">$0.00</div>
            <div class="total-payout">
              <span>Total Payout: </span>
              <span data-betting-target="totalPayout">$0.00</span>
            </div>
          </div>
          
          <%= form.hidden_field :selected_bet, data: { betting_target: "selectedBet" } %>
          <%= form.hidden_field :selected_odds, data: { betting_target: "selectedOdds" } %>
        </div>

        <div class="modal-footer">
          <button type="button" class="btn btn-cancel" data-action="betting#closeModal">Cancel</button>
          <%= form.submit "Confirm Bet", class: "btn btn-confirm", data: { betting_target: "confirmButton" } %>
        </div>
      <% end %>
    </div>
  </div>
</div>

<style>
  .refresh-banner {
    background: #2a2a2a;
    border-bottom: 1px solid #444;
    padding: 8px;
    margin: 0;
  }

  .refresh-banner-content {
    max-width: 100%;
    display: flex;
    flex-direction: column;
    gap: 12px;
  }

  .refresh-banner-text {
    color: #ccc;
    font-size: 14px;
    line-height: 1.4;
  }

  .refresh-banner-text p {
    margin: 0 0 8px 0;
  }

  .refresh-banner-text p:last-child {
    margin-bottom: 0;
  }

  .refresh-banner-text a {
    color: #4d9640;
    text-decoration: none;
  }

  .refresh-banner-text a:hover {
    text-decoration: underline;
  }

  .refresh-banner-button {
    background: #4d9640;
    color: white;
    border: none;
    border-radius: 8px;
    padding: 4px 6px;
    font-size: 14px;
    font-weight: bold;
    cursor: pointer;
    transition: all 0.2s;
    display: flex;
    align-items: center;
    gap: 8px;
    align-self: flex-start;
    min-width: 140px;
    justify-content: center;
  }

  .refresh-banner-button:hover:not(:disabled) {
    background: #5db04f;
  }

  .refresh-banner-button:disabled {
    background: #666;
    cursor: not-allowed;
  }

  .refresh-spinner {
    display: inline-block;
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }

  .hidden {
    display: none !important;
  }

  @media (min-width: 768px) {
    .refresh-banner-content {
      flex-direction: row;
      align-items: center;
      justify-content: space-between;
    }

    .refresh-banner-text {
      flex: 1;
      margin-right: 20px;
    }

    .refresh-banner-button {
      align-self: auto;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const homeRefreshBtn = document.getElementById('homeRefreshGamesBtn');
    if (homeRefreshBtn) {
      homeRefreshBtn.addEventListener('click', function() {
        const refreshText = this.querySelector('.refresh-text');
        const refreshSpinner = this.querySelector('.refresh-spinner');
        
        // Disable button and show spinner
        this.disabled = true;
        refreshText.textContent = 'Updating...';
        refreshSpinner.classList.remove('hidden');
        
        fetch('/admin/refresh_games', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
          }
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            // Show success feedback
            refreshText.textContent = 'Updated!';
            refreshSpinner.classList.add('hidden');
            
            // Reload the page after a short delay to show updated odds
            setTimeout(() => {
              window.location.reload();
            }, 1500);
          } else {
            throw new Error(data.errors ? data.errors.join(', ') : 'Update failed');
          }
        })
        .catch(error => {
          console.error('Error refreshing games:', error);
          alert('Error refreshing games: ' + error.message);
          
          // Reset button
          refreshText.textContent = 'Refresh Odds';
          refreshSpinner.classList.add('hidden');
          this.disabled = false;
        });
      });
    }
  });
</script>

<%= render partial: 'betting_styles' %>